(transitionThreatKind == 'threat-threat' | transitionThreatKind == 'threat-neutral' | transitionThreatKind == 'neutral-threat') ~ "contains_threat",
(transitionThreatKind == 'neutral-neutral') ~ "no_threat"
))
transition_type_df
View(transition_type_df)
View(transition_type_df)
counts_transitionType_df <- transition_type_df %>%
group_by(subject, acc_descriptor, transition_threat) %>%
summarize(count = n()) %>%
pivot_wider(names_from = acc_descriptor, values_from = count)
counts_transitionType_df
counts_transitionType_df <- transition_type_df %>%
group_by(subject, acc_descriptor, transition_threat) %>%
summarize(count = n()) %>%
pivot_wider(names_from = acc_descriptor, values_from = count, values_fill = 0)
counts_transitionType_df
dprime_df <- counts_transitionType_df
dprime.stats <-psycho::dprime(counts_transitionType_df$hits, counts_transitionType_df$false_alarms, counts_transitionType_df$misses, counts_transitionType_df$correct_rejections)
dprime_df$dprime <- dprime.stats$dprime
dprime_df
threat_percent_ooo_df <- mistake_df %>%
count(chosenThreatStatus) %>%
mutate(total_observations = nrow(mistake_df)) %>%
mutate(percentage_chosenThreatStatus = (n/total_observations)*100)
threat_percent_ooo_df
threat_percent_subjects_df <- mistake_df %>%
group_by(subject) %>%
count(chosenThreatStatus) %>%
mutate(total_observations = nrow(mistake_df)) %>%
mutate(percentage_chosenThreatStatus = (n/total_observations)*100)
threat_percent_subjects_df
ggplot(data = threat_percent_subjects_df, mapping = aes(x = chosenThreatStatus, y = percentage_chosenThreatStatus, fill = chosenThreatStatus)) +
geom_boxplot(alpha = 0.5) +
geom_jitter(width=0.1)
subject_acc_ooo_df <- ooo_df %>%
group_by(subject, chosenThreatStatus) %>%
summarize(mean_acc = mean(acc))
subject_acc_ooo_df
ggplot(subject_acc_ooo_df, aes(x = chosenThreatStatus, y = mean_acc, fill=chosenThreatStatus)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.1)
dprime_df <- counts_transitionType_df
dprime.stats <-psycho::dprime(counts_transitionType_df$hits, counts_transitionType_df$false_alarms, counts_transitionType_df$misses, counts_transitionType_df$correct_rejections)
dprime_df$dprime <- dprime.stats$dprime
dprime_df
View(dprime_df)
subject_dprime_df <- dprime_df %>%
select(dprime_df, subject, transition_threat, dprime)
subject_dprime_df <- dprime_df %>%
select(subject, transition_threat, dprime)
subject_dprime_df
subject_acc_ooo_df <- ooo_df %>%
group_by(subject, chosenThreatStatus) %>%
summarize(mean_acc = mean(acc))
subject_acc_ooo_df
subject_dprime_df <- dprime_df %>%
select(subject, transition_threat, dprime)
subject_dprime_df
ggplot(subject_dprime_df, aes(x = transition_threat, y = dprime, fill=transition_threat)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.1)
df <- read_csv(data_path)
dropEvent_df <- df %>%
filter(taskName == 'dragTaskDropEvent') %>%
select(subject, trialAttempt, RT, nCorrect, dragThreat, dragAcc, swappedThreat, swappedAcc)
dropEvent_df
df <- read_csv(data_path)
dropEvent_df <- df %>%
filter(sectionType == 'dragTaskDropEvent') %>%
select(subject, trialAttempt, RT, nCorrect, dragThreat, dragAcc, swappedThreat, swappedAcc)
dropEvent_df
library(tidyverse)
library(psycho)
#path reference
data_path <- '/Users/brookesevchik/Box/Data/Anxiety_Cognitive_Maps/Pilot1/combinedData_Anxiety_Cognitive_Maps.csv'
#load data
df <- read_csv(data_path)
dropEvent_df <- df %>%
filter(sectionType == 'dragTaskDropEvent') %>%
select(subject, trialAttempt, RT, nCorrect, dragThreat, dragAcc, swappedThreat, swappedAcc)
dropEvent_df
library(tidyverse)
library(psycho)
#path reference
data_path <- '/Users/brookesevchik/Box/Data/Anxiety_Cognitive_Maps/Pilot1/combinedData_Anxiety_Cognitive_Maps.csv'
#load data
df <- read_csv(data_path)
dropEvent_df <- df %>%
filter(taskName == 'dragTaskDropEvent') %>%
select(subject, trialAttempt, RT, nCorrect, dragThreat, dragAcc, swappedThreat, swappedAcc)
dropEvent_df
View(dropEvent_df)
View(drop_df)
drop_df
View(drop_df)
library(tidyverse)
library(psycho)
drop_df
library(tidyverse)
library(psycho)
check_answer_df
View(check_answer_df)
library(tidyverse)
library(psycho)
drop_df
drop_df <- drop_df %>%
mutate(involving_threat = case_when(
(dragThreat == 'threat' | swappedThreat == 'threat') ~ 'involves_threat',
(dragThreat == 'no_threat' & swappedThreat == 'no_threat') ~ 'does_not_involve_threat'
))
drop_df
drop_df <- drop_df %>%
mutate(involving_threat = case_when(
(dragThreat == 'threat' | swappedThreat == 'threat') ~ 'involves_threat',
TRUE ~ 'does_not_involve_threat'
))
drop_df
library(tidyverse)
library(psycho)
drop_df
drop_df <- drop_df %>%
mutate(involving_threat = case_when(
(dragThreat == 'threat' | swappedThreat == 'threat') ~ 'involves_threat',
TRUE ~ 'does_not_involve_threat'
))
drop_df
drop_acc_df <- drop_df %>%
select(subject, dragThreat, swappedThreat, dragAcc, swappedAcc, involving_threat) %>%
group_by(subject, involving_threat, dragAcc)
drop_acc_df
library(tidyverse)
library(psycho)
drop_df
drop_df <- drop_df %>%
mutate(involving_threat = case_when(
(dragThreat == 'threat' | swappedThreat == 'threat') ~ 'involves_threat',
TRUE ~ 'does_not_involve_threat'
))
drop_df
drop_acc_df <- drop_df %>%
select(subject, dragAcc, swappedAcc, involving_threat) %>%
group_by(subject, involving_threat, dragAcc)
drop_acc_df
library(tidyverse)
library(psycho)
check_answer_df
check_answer_acc_df <- check_answer_df %>%
select(slot0CurrentType, slot0Acc, slot1CurrentType, slot1Acc, slot2CurrentType, slot2Acc, slot3CurrentType, slot3Acc, slot4CurrentType, slot4Acc,
slot5CurrentType, slot5Acc, slot6CurrentType, slot6Acc, slot7CurrentType, slot7Acc, slot8CurrentType, slot8Acc, slot9CurrentType, slot9Acc)
check_answer_acc_df
library(tidyverse)
library(psycho)
check_answer_df
#for trial one
check_answer_acc_df <- check_answer_df %>%
filter(trialCount == 1) %>%
select(slot0CurrentType, slot0Acc, slot1CurrentType, slot1Acc, slot2CurrentType, slot2Acc, slot3CurrentType, slot3Acc, slot4CurrentType, slot4Acc,
slot5CurrentType, slot5Acc, slot6CurrentType, slot6Acc, slot7CurrentType, slot7Acc, slot8CurrentType, slot8Acc, slot9CurrentType, slot9Acc)
check_answer_acc_df
View(check_answer_acc_df)
library(tidyverse)
library(psycho)
check_answer_df
#for trial one, attempt one
check_answer_acc_df <- check_answer_df %>%
filter(trialCount == 1 & trialAttempt == 1) %>%
select(slot0CurrentType, slot0Acc, slot1CurrentType, slot1Acc, slot2CurrentType, slot2Acc, slot3CurrentType, slot3Acc, slot4CurrentType, slot4Acc,
slot5CurrentType, slot5Acc, slot6CurrentType, slot6Acc, slot7CurrentType, slot7Acc, slot8CurrentType, slot8Acc, slot9CurrentType, slot9Acc)
check_answer_acc_df
View(check_answer_acc_df)
library(tidyverse)
library(psycho)
check_answer_df
#for trial one, attempt one
check_answer_acc_df <- check_answer_df %>%
filter(trialCount == 1 & trialAttempt == 1) %>%
select(subject, slot0CurrentType, slot0Acc, slot1CurrentType, slot1Acc, slot2CurrentType, slot2Acc, slot3CurrentType, slot3Acc, slot4CurrentType, slot4Acc,
slot5CurrentType, slot5Acc, slot6CurrentType, slot6Acc, slot7CurrentType, slot7Acc, slot8CurrentType, slot8Acc, slot9CurrentType, slot9Acc)
check_answer_acc_df
transition_type_df <- transition_type_df %>%
mutate(transition_threat = case_when(
(transitionThreatKind == 'threat-threat' | transitionThreatKind == 'threat-neutral' | transitionThreatKind == 'neutral-threat') ~ "contains_threat",
(transitionThreatKind == 'neutral-neutral') ~ "no_threat"
))
transition_type_df
acc_illegal_df <- illegal_df %>%
select(subject, transitionType, acc, transitionThreatKind) %>%
group_by(transitionType, acc)
acc_illegal_df
#for trial one, attempt one, for first subject
check_answer_acc_df <- check_answer_df %>%
filter(trialCount == 1 & trialAttempt == 1 & subject = 'a273wocs111dh0' ) %>%
select(subject, slot0CurrentType, slot0Acc, slot1CurrentType, slot1Acc, slot2CurrentType, slot2Acc, slot3CurrentType, slot3Acc, slot4CurrentType, slot4Acc,
slot5CurrentType, slot5Acc, slot6CurrentType, slot6Acc, slot7CurrentType, slot7Acc, slot8CurrentType, slot8Acc, slot9CurrentType, slot9Acc)
check_answer_acc_df
library(tidyverse)
library(psycho)
check_answer_df
#for trial one, attempt one, for first subject
check_answer_acc_df <- check_answer_df %>%
filter(trialCount == 1 & trialAttempt == 1 & subject == 'a273wocs111dh0' ) %>%
select(subject, slot0CurrentType, slot0Acc, slot1CurrentType, slot1Acc, slot2CurrentType, slot2Acc, slot3CurrentType, slot3Acc, slot4CurrentType, slot4Acc,
slot5CurrentType, slot5Acc, slot6CurrentType, slot6Acc, slot7CurrentType, slot7Acc, slot8CurrentType, slot8Acc, slot9CurrentType, slot9Acc)
check_answer_acc_df
View(check_answer_acc_df)
library(tidyverse)
library(psycho)
check_answer_df
#for trial one, attempt one, for first subject
check_answer_acc_df <- check_answer_df %>%
filter(trialCount == 1 & trialAttempt == 1 & subject == 'a273wocs111dh0' ) %>%
select(subject, slot0CurrentType, slot0Acc, slot1CurrentType, slot1Acc, slot2CurrentType, slot2Acc, slot3CurrentType, slot3Acc, slot4CurrentType, slot4Acc,
slot5CurrentType, slot5Acc, slot6CurrentType, slot6Acc, slot7CurrentType, slot7Acc, slot8CurrentType, slot8Acc, slot9CurrentType, slot9Acc)
check_answer_acc_df
check_answer_acc_df <- check_answer_acc_df %>%
mutate(current_type = case_when(
(slot0CurrentType == 'neutral' | slot1CurrentType == 'neutral' | slot2CurrentType == 'neutral') ~ 'neutral'
))
check_answer_acc_df
transition_type_df <- acc_illegal_df %>%
mutate(acc_descriptor = case_when(
(transitionType == 'i' & acc == 1) ~ "hits",
(transitionType == 'i' & acc == 0) ~ "misses",
(transitionType == 'l' & acc == 0) ~ "false_alarms",
(transitionType == 'l' & acc == 1) ~ "correct_rejections"
))
transition_type_df
counts_transitionType_df <- transition_type_df %>%
group_by(subject, acc_descriptor, transitionThreatKind) %>%
summarize(count = n()) %>%
pivot_wider(names_from = acc_descriptor, values_from = count, values_fill = 0)
counts_transitionType_df
check_answer_acc_df <- check_answer_df %>%
filter(trialCount == 1 & trialAttempt == 1 & subject == 'a273wocs111dh0' ) %>%
select(subject, slot0CurrentType, slot0Acc, slot1CurrentType, slot1Acc, slot2CurrentType, slot2Acc, slot3CurrentType, slot3Acc, slot4CurrentType, slot4Acc,
slot5CurrentType, slot5Acc, slot6CurrentType, slot6Acc, slot7CurrentType, slot7Acc, slot8CurrentType, slot8Acc, slot9CurrentType, slot9Acc)
check_answer_acc_df
#set-up
setwd("~/Documents/GitHub/anxiety_cognitive_maps_analyses")
library(tidyverse)
library(dplyr)
#BE SURE TO EDIT PATH NAMES EACH TIME YOU RUN SCRIPT
#path references
data_path <- '/Users/brookesevchik/Box/Data/Anxiety_Cognitive_Maps/Pilot1/STAIscores.csv' #EDIT PATH NAME EACH TIME
#load data
df_pilot1 <- read_csv(data_path)
#manipulate df to get it to look how you want
colnames(df_pilot1) <- c('not_included', 'subjectID', paste0('s', 1:20))
num_rows = nrow(df_pilot1)
num_rows
df_pilot1 <- df_pilot1 %>%
slice(2:num_rows) %>%
select('subjectID', 's1', 's2', 's3', 's4', 's5', 's6', 's7', 's8', 's9', 's10', 's11', 's12', 's13', 's14', 's15', 's16', 's17', 's18', 's19', 's20')
#getting scores into numeric form so you can add them together later
print(sapply(df_pilot1, class)) #debugging
df_pilot1 <- transform(df_pilot1,s1 = as.numeric(s1))
print(sapply(df_pilot1$s1, class)) #debugging
df_pilot1 <- df_pilot1 %>%
mutate(across(paste0('s', 1:20), as.numeric))
#changing non-responses (5) into NaN
df_pilot1 <- df_pilot1 %>%
mutate(across(paste0('s', 1:20), ~ case_when(. == 5 ~ 0,
TRUE ~ .)))
#reverse score what needs to be reverse scored
df_pilot1 <- df_pilot1 %>%
group_by(subjectID) %>%
mutate(s1 = ifelse(s1== 0, 0, 5 - s1),
s3 = ifelse(s3== 0, 0, 5 - s3),
s6 = ifelse(s6== 0, 0, 5 - s6),
s7 = ifelse(s7== 0, 0, 5 - s7),
s10 = ifelse(s10== 0, 0, 5 - s10),
s13 = ifelse(s13== 0, 0, 5 - s13),
s14 = ifelse(s14== 0, 0, 5 - s14),
s16 = ifelse(s16== 0, 0, 5 - s16),
s19 = ifelse(s19== 0, 0, 5 - s19))
#get the mean & replace NaNs(0s) w the mean
df_pilot1 <- df_pilot1 %>%
mutate(meanVals = (s1 + s2 + s3 + s4 + s5 + s6 + s7 + s8 + s9 + s10 + s11 + s12 + s13 + s14 + s15 + s16 + s17 + s18 + s19 + s20)/ 20) %>%
mutate(across(paste0('s', 1:20), ~ case_when(. == 0 ~ meanVals,
TRUE ~ .)))
#sum STAI score
df_pilot1 <- df_pilot1 %>%
group_by(subjectID) %>%
mutate(sumVals = s1 + s2 + s3 + s4 + s5 + s6 + s7 + s8 + s9 + s10 + s11 + s12 + s13 + s14 + s15 + s16 + s17 + s18 + s19 + s20)
#classify anxiety levels based on STAI sum
df_pilot1_STAI <- df_pilot1 %>%
group_by(subjectID) %>%
mutate(anxiety_level = case_when(
sumVals < 37 ~ 'low trait anxiety',
sumVals >= 38 & sumVals < 44 ~ 'moderate trait anxiety',
sumVals > 44 ~ 'high trait anxiety'
))
df_pilot1_STAI
View(df_pilot1_STAI)
df_pilot1_STAI_simple <- df_pilot1_STAI %>%
select(subjectID, anxiety_level)
df_pilot1_STAI_simple
merged_df <- merge(mistake_df, sd_pilot1_STAI_simple, by = "subjectID", all = TRUE)
#set-up
setwd("~/Documents/GitHub/anxiety_cognitive_maps_analyses")
library(tidyverse)
library(dplyr)
#BE SURE TO EDIT PATH NAMES EACH TIME YOU RUN SCRIPT
#path references
data_path <- '/Users/brookesevchik/Box/Data/Anxiety_Cognitive_Maps/Pilot1/STAIscores.csv' #EDIT PATH NAME EACH TIME
#load data
df_pilot1 <- read_csv(data_path)
#manipulate df to get it to look how you want
colnames(df_pilot1) <- c('not_included', 'subjectID', paste0('s', 1:20))
num_rows = nrow(df_pilot1)
num_rows
df_pilot1 <- df_pilot1 %>%
slice(2:num_rows) %>%
select('subjectID', 's1', 's2', 's3', 's4', 's5', 's6', 's7', 's8', 's9', 's10', 's11', 's12', 's13', 's14', 's15', 's16', 's17', 's18', 's19', 's20')
#getting scores into numeric form so you can add them together later
print(sapply(df_pilot1, class)) #debugging
df_pilot1 <- transform(df_pilot1,s1 = as.numeric(s1))
print(sapply(df_pilot1$s1, class)) #debugging
df_pilot1 <- df_pilot1 %>%
mutate(across(paste0('s', 1:20), as.numeric))
#changing non-responses (5) into NaN
df_pilot1 <- df_pilot1 %>%
mutate(across(paste0('s', 1:20), ~ case_when(. == 5 ~ 0,
TRUE ~ .)))
#reverse score what needs to be reverse scored
df_pilot1 <- df_pilot1 %>%
group_by(subjectID) %>%
mutate(s1 = ifelse(s1== 0, 0, 5 - s1),
s3 = ifelse(s3== 0, 0, 5 - s3),
s6 = ifelse(s6== 0, 0, 5 - s6),
s7 = ifelse(s7== 0, 0, 5 - s7),
s10 = ifelse(s10== 0, 0, 5 - s10),
s13 = ifelse(s13== 0, 0, 5 - s13),
s14 = ifelse(s14== 0, 0, 5 - s14),
s16 = ifelse(s16== 0, 0, 5 - s16),
s19 = ifelse(s19== 0, 0, 5 - s19))
#get the mean & replace NaNs(0s) w the mean
df_pilot1 <- df_pilot1 %>%
mutate(meanVals = (s1 + s2 + s3 + s4 + s5 + s6 + s7 + s8 + s9 + s10 + s11 + s12 + s13 + s14 + s15 + s16 + s17 + s18 + s19 + s20)/ 20) %>%
mutate(across(paste0('s', 1:20), ~ case_when(. == 0 ~ meanVals,
TRUE ~ .)))
#sum STAI score
df_pilot1 <- df_pilot1 %>%
group_by(subjectID) %>%
mutate(sumVals = s1 + s2 + s3 + s4 + s5 + s6 + s7 + s8 + s9 + s10 + s11 + s12 + s13 + s14 + s15 + s16 + s17 + s18 + s19 + s20)
#classify anxiety levels based on STAI sum
df_pilot1_STAI <- df_pilot1 %>%
group_by(subjectID) %>%
mutate(anxiety_level = case_when(
sumVals < 37 ~ 'low trait anxiety',
sumVals >= 38 & sumVals < 44 ~ 'moderate trait anxiety',
sumVals > 44 ~ 'high trait anxiety'
))
df_pilot1_STAI
df_pilot1_STAI_simple <- df_pilot1_STAI %>%
select(subjectID, anxiety_level)
df_pilot1_STAI_simple
#save out the file
write.csv(df_pilot1, '/Users/brookesevchik/Box/Data/Anxiety_Cognitive_Maps/Pilot1/STAI_scores_calculated.csv') #EDIT PATH NAME EACH TIME
df_STAI <- read_csv('/Users/brookesevchik/Box/Data/Anxiety_Cognitive_Maps/Pilot1/STAI_scores_calculated.csv')
df_STAI <- read_csv('/Users/brookesevchik/Box/Data/Anxiety_Cognitive_Maps/Pilot1/STAI_scores_calculated.csv')
df_STAI
df_pilot1_STAI_simple <- df_STAI_ooo %>%
select(subjectID, anxiety_level)
###
#include STAI scores in ooo analyses
df_STAI_ooo <- read_csv('/Users/brookesevchik/Box/Data/Anxiety_Cognitive_Maps/Pilot1/STAI_scores_calculated.csv')
df_STAI_ooo
df_pilot1_STAI_simple <- df_STAI_ooo %>%
select(subjectID, anxiety_level)
df_pilot1_STAI_simple
merged_df <- merge(mistake_df, df_pilot1_STAI_simple, by = "subjectID", all = TRUE)
df_pilot1_STAI_simple <- df_STAI_ooo %>%
select(subjectID, anxiety_level)
df_pilot1_STAI_simple
names(df_pilot1_STAI_simple) <- c('subject', 'anxiety_level')
df_pilot1_STAI_simple
merged_df <- merge(mistake_df, df_pilot1_STAI_simple, by = "subject", all = TRUE)
merged_df <- merge(mistake_df, df_pilot1_STAI_simple, by = "subject", all = TRUE)
merged_df
ooo_anxiety_df <- merge(mistake_df, df_pilot1_STAI_simple, by = "subject", all = TRUE)
ooo_anxiety_df
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
threat_percent_ooo_df <- mistake_df %>%
count(chosenThreatStatus) %>%
mutate(total_observations = nrow(mistake_df)) %>%
mutate(percentage_chosenThreatStatus = (n/total_observations)*100)
threat_percent_ooo_df
threat_percent_subjects_df <- mistake_df %>%
group_by(subject) %>%
count(chosenThreatStatus) %>%
mutate(total_observations = nrow(mistake_df)) %>%
mutate(percentage_chosenThreatStatus = (n/total_observations)*100)
threat_percent_subjects_df
ggplot(data = threat_percent_ooo_df, mapping = aes(x = chosenThreatStatus, y = percentage_chosenThreatStatus)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Chosen Threat Status", y = "Percentage") +
scale_x_discrete(labels = c("neutral", "threat"))
ggplot(data = threat_percent_subjects_df, mapping = aes(x = chosenThreatStatus, y = percentage_chosenThreatStatus, fill = chosenThreatStatus)) +
geom_boxplot(alpha = 0.5) +
geom_jitter(width=0.1)
subject_acc_ooo_df <- ooo_df %>%
group_by(subject, chosenThreatStatus) %>%
summarize(mean_acc = mean(acc))
subject_acc_ooo_df
ggplot(subject_acc_ooo_df, aes(x = chosenThreatStatus, y = mean_acc, fill=chosenThreatStatus)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.1)
View(ooo_df)
STAI_subject_acc_ooo_df <- merge(ooo_df, df_pilot1_STAI_simple, by = "subject", all = TRUE)
ooo_anxiety_df
STAI_subject_acc_ooo_df <- merge(ooo_df, df_pilot1_STAI_simple, by = "subject", all = TRUE)
STAI_subject_acc_ooo_df
STAI_subject_acc_ooo_df <- STAI_subject_acc_ooo_df %>%
group_by(subject, chosenThreatStatus) %>%
summarize(mean_acc = mean(acc))
STAI_subject_acc_ooo_df
STAI_subject_acc_ooo_df <- STAI_subject_acc_ooo_df %>%
group_by(subject, chosenThreatStatus, anxiety_level) %>%
summarize(mean_acc = mean(acc))
STAI_subject_acc_ooo_df <- merge(ooo_df, df_pilot1_STAI_simple, by = "subject", all = TRUE)
STAI_subject_acc_ooo_df
STAI_subject_acc_ooo_df <- STAI_subject_acc_ooo_df %>%
group_by(subject, chosenThreatStatus, anxiety_level) %>%
summarize(mean_acc = mean(acc))
STAI_subject_acc_ooo_df
ggplot(STAI_subject_acc_ooo_df, aes(x = chosenThreatStatus, y = mean_acc, fill=anxiety_level)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.1)
ggplot(STAI_subject_acc_ooo_df, aes(x = chosenThreatStatus, y = mean_acc, fill=chosenThreatStatus)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.1)
ggplot(STAI_subject_acc_ooo_df, aes(x = chosenThreatStatus, y = mean_acc, fill=anxiety_levels) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.1)
ggplot(STAI_subject_acc_ooo_df, aes(x = chosenThreatStatus, y = mean_acc, fill=chosenThreatStatus)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.1)
ggplot(STAI_subject_acc_ooo_df, aes(x = chosenThreatStatus, y = mean_acc, fill=chosenThreatStatus, color = anxiety_level)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.1)
ggplot(STAI_subject_acc_ooo_df, aes(x = chosenThreatStatus, y = mean_acc, fill=chosenThreatStatus)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.1)
threat_percent_ooo_df <- mistake_df %>%
count(chosenThreatStatus) %>%
mutate(total_observations = nrow(mistake_df)) %>%
mutate(percentage_chosenThreatStatus = (n/total_observations)*100)
threat_percent_ooo_df
ooo_anxiety_df <- merge(mistake_df, df_pilot1_STAI_simple, by = "subject", all = TRUE)
ooo_anxiety_df
mistake_df
ooo_anxiety_df
mistake_df
ooo_anxiety_df
threat_percent_subjects_df <- ooo_anxiety_df  %>%
group_by(subject) %>%
count(chosenThreatStatus) %>%
mutate(total_observations = nrow(mistake_df)) %>%
mutate(percentage_chosenThreatStatus = (n/total_observations)*100)
threat_percent_subjects_df
ooo_anxiety_df
threat_percent_subjects_df <- ooo_anxiety_df  %>%
group_by(subject, anxiety_level) %>%
count(chosenThreatStatus) %>%
mutate(total_observations = nrow(mistake_df)) %>%
mutate(percentage_chosenThreatStatus = (n/total_observations)*100)
threat_percent_subjects_df
dprime_df
df_STAI_illegal <- read_csv('/Users/brookesevchik/Box/Data/Anxiety_Cognitive_Maps/Pilot1/STAI_scores_calculated.csv')
df_STAI_illegal
df_STAI_illegal <- read_csv('/Users/brookesevchik/Box/Data/Anxiety_Cognitive_Maps/Pilot1/STAI_scores_calculated.csv')
df_STAI_illegal
df_pilot1_STAI_simple <- df_STAI_illegal %>%
select(subjectID, anxiety_level)
df_STAI_illegal <- read_csv('/Users/brookesevchik/Box/Data/Anxiety_Cognitive_Maps/Pilot1/STAI_scores_calculated.csv')
df_STAI_illegal
df_pilot1_STAI_simple <- df_STAI_illegal %>%
select(subjectID, anxiety_level)
df_STAI_illegal <- read_csv('/Users/brookesevchik/Box/Data/Anxiety_Cognitive_Maps/Pilot1/STAI_scores_calculated.csv')
df_STAI_illegal
df_pilot1_STAI_simple <- df_STAI_illegal %>%
select(subjectID, anxiety_level)
df_pilot1_STAI_simple
df_STAI_illegal <- read_csv('/Users/brookesevchik/Box/Data/Anxiety_Cognitive_Maps/Pilot1/STAI_scores_calculated.csv')
df_STAI_illegal
df_pilot1_STAI_simple <- df_STAI_illegal %>%
select(subjectID, anxiety_level)
df_pilot1_STAI_simple
names(df_pilot1_STAI_simple) <- c('subject', 'anxiety_level')
df_pilot1_STAI_simple
df_STAI_illegal <- read_csv('/Users/brookesevchik/Box/Data/Anxiety_Cognitive_Maps/Pilot1/STAI_scores_calculated.csv')
df_STAI_illegal
df_pilot1_STAI_simple <- df_STAI_illegal %>%
select(subjectID, anxiety_level)
df_pilot1_STAI_simple
names(df_pilot1_STAI_simple) <- c('subject', 'anxiety_level')
df_pilot1_STAI_simple
illegal_anxiety_df <- merge(dprime_df, df_pilot1_STAI_simple, by = "subject", all = TRUE)
illegal_anxiety_df
illegal_dprime_df
illegal_anxiety_df
illegal_anxiety_df
subject_dprime_df <- illegal_anxiety_df %>%
select(subject, transition_threat, dprime)
subject_dprime_df
illegal_anxiety_df
subject_dprime_df <- illegal_anxiety_df %>%
select(subject, transition_threat, dprime, anxiety_level)
subject_dprime_df
