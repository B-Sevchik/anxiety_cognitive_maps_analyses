geom_point() +
geom_line(aes(group=subject)) +
geom_boxplot(alpha = 0.5, fill = "blue", outlier.colour = NA) +
xlab("Block") +
ylab("Accuracy")
t.test(it_acc_illegal$acc_perc ~ it_acc_illegal$block, paired = TRUE, alternative = "two.sided")
subj_df <- df %>%
filter(taskName == "illegalTransitionTask" | taskName == "practiceTransitionTask") %>%
select(subject, taskName, trialCount, RT, acc, transitionType)
library(tidyverse)
library(reshape2)
library(psych)
library(knitr)
#library(lmerTest)
#path references
data_path <-  "/Users/brookesevchik/Box/Data/Optimal_Learning/Pilot2/"
fileName <-  "optimal_learning"
dfFileName <- paste("combinedData_", fileName, ".csv", sep = "")
#load data
df <- read_csv(paste(data_path,dfFileName,sep="/")) %>%
mutate(block = as.factor(k))
#df <- df %>%
#filter(subject!="aks4fb283j7wy")
library(tidyverse)
library(reshape2)
library(psych)
library(knitr)
#library(lmerTest)
library(tidyverse)
library(reshape2)
library(psych)
library(knitr)
#path references
data_path <-  "/Users/brookesevchik/Box/Data/Optimal_Learning/Pilot2/"
fileName <-  "optimal_learning"
dfFileName <- paste("combinedData_", fileName, ".csv", sep = "")
#load data
df <- read_csv(paste(data_path,dfFileName,sep="/")) %>%
mutate(block = as.factor(k))
#df <- df %>%
#filter(subject!="aks4fb283j7wy")
View(df)
View(df)
library(tidyverse)
library(reshape2)
library(psych)
library(knitr)
#library(lmerTest)
#path references
data_path <-  "/Users/brookesevchik/Box/Data/Optimal_Learning/Pilot2/"
fileName <-  "optimal_learning"
dfFileName <- paste("combinedData_", fileName, ".csv", sep = "")
#load data
df <- read_csv(paste(data_path,dfFileName,sep="/")) %>%
mutate(block = as.factor(x))
#df <- df %>%
#filter(subject!="aks4fb283j7wy")
library(tidyverse)
library(reshape2)
library(psych)
library(knitr)
#library(lmerTest)
library(tidyverse)
library(reshape2)
library(psych)
library(knitr)
#library(lmerTest)
#path references
data_path <-  "/Users/brookesevchik/Library/CloudStorage/Box-Box/Data/Optimal_Learning/Pilot1"
fileName <-  "NL_2B"
dfFileName <- paste("combinedData_", fileName, ".csv", sep = "")
#load data
df <- read_csv(paste(data_path,dfFileName,sep="/"),
col_types = cols(
isParsed = col_double(),
oddOneChoice = col_double(),
choice_name = col_character(),
choice_image = col_character(),
choice_communityNumber = col_double(),
option1_name = col_character(),
option1_image = col_character(),
option1_communityNumber = col_double(),
option2_name = col_character(),
option2_image = col_character(),
option2_communityNumber = col_double(),
option3_name = col_character(),
option3_image = col_character(),
option3_communityNumber = col_double()
)
)
library(tidyverse)
library(reshape2)
library(psych)
library(knitr)
#library(lmerTest)
#path references
data_path <-  "/Users/brookesevchik/Box/Research Stuff/Network_Analysis_2B (2).R/"
fileName <-  "NL_2B"
dfFileName <- paste("combinedData_", fileName, ".csv", sep = "")
#load data
df <- read_csv(paste(data_path,dfFileName,sep="/"),
col_types = cols(
isParsed = col_double(),
oddOneChoice = col_double(),
choice_name = col_character(),
choice_image = col_character(),
choice_communityNumber = col_double(),
option1_name = col_character(),
option1_image = col_character(),
option1_communityNumber = col_double(),
option2_name = col_character(),
option2_image = col_character(),
option2_communityNumber = col_double(),
option3_name = col_character(),
option3_image = col_character(),
option3_communityNumber = col_double()
)
)
# practice data
prac_df <- df %>%
filter(sectionType == "pracTask")
#time data
time_df <- df %>%
filter(sectionType == "instructions" | sectionType == "pracFeedback" | sectionType == "blockBreak")
#network learning df
nl_df <- df %>%
filter(taskName == "learnNetworkTask" & sectionType == "mainTask")
nl_acc <- nl_df %>%
group_by(subject) %>%
summarise(acc_perc = mean(acc))
nl_acc
#parsing task
parse_df <- df %>%
filter(taskName == "parsingTask" & sectionType == "mainTask")
parse_data <- parse_df %>%
mutate(lags_ok =
lag(activeNode_communityNumber,1) == lag(activeNode_communityNumber,2) &
lag(activeNode_communityNumber,1) == lag(activeNode_communityNumber,3) &
lag(activeNode_communityNumber,1) == lag(activeNode_communityNumber,4)) %>%
group_by(subject) %>%
summarise(communityTransitions = sum(isCommunityTransition & lags_ok, na.rm = TRUE),
nonTransitions = n() - communityTransitions,
transitionParse = sum(isParsed &
isCommunityTransition == 1 &
lags_ok, na.rm = TRUE),
nonTransitionParse = sum(isParsed) - transitionParse,
parseCount = sum(isParsed),
overallParseProb = (transitionParse + nonTransitionParse) / (communityTransitions + nonTransitions),
percTransition = transitionParse / communityTransitions,
percWithin = nonTransitionParse / nonTransitions,
parsingRatio = percTransition / percWithin)
parse_data
#odd one out
ooo_df <- df %>%
filter(taskName == "oddOneOutTest" & sectionType == "mainTask")
ooo_acc <- ooo_df %>%
group_by(subject) %>%
summarise(acc_perc = mean(acc))
ooo_acc
ggplot(ooo_acc, aes(x = "Whole Sample",y = acc_perc)) +
geom_jitter(width = 0.3) +
geom_boxplot(alpha = 0.5, fill = "blue", outlier.colour = NA) +
ylab("Accuracy") +
theme(axis.title.x=element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
geom_hline(yintercept=0.33, linetype="dashed",
color = "black", size=2)
#one sided t-test (> .33)
t.test(ooo_acc$acc_perc, mu=0.33, alternative="greater")
bad_sub <- nl_df %>%
filter(subject == "a3p5wiw36v70ai")
bad_sub_stats <- bad_sub %>%
summarise(resp = sum(!is.na(partResp))/1000)
bad_sub_stats
library(tidyverse)
library(reshape2)
library(psych)
library(knitr)
#library(lmerTest)
#path references
data_path <-  "/Users/brookesevchik/Box/Research Stuff/Network_Analysis_2B (2).R/"
fileName <-  "NL_2B"
dfFileName <- paste("combinedData_", fileName, ".csv", sep = "")
library(tidyverse)
library(reshape2)
library(psych)
library(knitr)
#library(lmerTest)
#path references
data_path <-  "/Users/brookesevchik/Box/Research Stuff/Network_Analysis_2B (2).R/"
fileName <-  "NL_2B"
dfFileName <- paste("combinedData_", fileName, ".csv", sep = "")
library(tidyverse)
library(reshape2)
library(psych)
library(knitr)
#library(lmerTest)
#path references
data_path <-  "/Users/brookesevchik/Box/Research Stuff/Network_Analysis_2B (2).R/"
fileName <-  "NL_2B"
dfFileName <- paste("combinedData_", fileName, ".csv", sep = "")
library(tidyverse)
library(reshape2)
library(psych)
library(knitr)
#library(lmerTest)
#path references
data_path <-  "/Users/brookesevchik/Box/Data/Optimal_Learning/Pilot2/"
fileName <-  "optimal_learning"
dfFileName <- paste("combinedData_", fileName, ".csv", sep = "")
#load data
df <- read_csv(paste(data_path,dfFileName,sep="/")) %>%
mutate(block = as.factor(k))
#df <- df %>%
#filter(subject!="aks4fb283j7wy")
#ODD ONE OUT
ooo_df <- df %>%
filter(taskName == "oddOneOutTest" & sectionName == "mainTask") %>%
select(taskName, sectionName, trialCount, blockTrialCount, block, trialAttempts, stimOnset,
respOnset, RT, acc, partResp, choice_name, choice_image, choice_communityNumber,
option1_name, option1_image, option1_communityNumber, option2_name, option2_image,
option2_communityNumber, option3_name, option3_image, option3_communityNumber, subject)
#ooo accuracy
ooo_acc <- ooo_df %>%
group_by(subject) %>%
summarise(acc_perc = mean(acc))
ooo_acc
#ooo RT stats
ooo_df %>%
summarise(mean_RT = mean(RT))
summarise(sd_RT = sd(RT))
#ooo plot
ggplot(ooo_acc, aes(x = "Whole Sample",y = acc_perc)) +
geom_jitter(width = 0.3) +
geom_boxplot(alpha = 0.5, fill = "blue", outlier.colour = NA) +
ylab("Accuracy") +
theme(axis.title.x=element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
geom_hline(yintercept=0.33, linetype="dashed",
color = "black", size=2)
#one sided t-test (> .33)
t.test(ooo_acc$acc_perc, mu=0.33, alternative="greater")
# DRAG TASK
dt_df <- df %>%
filter(taskName == "networkDragTask") %>%
select(subject, taskName, trialCount, trialAttempts, nCorrect, slot0, slot1, slot2, slot3, slot4, slot5, slot6, slot7, slot8, slot9) %>%
mutate(subject = as.factor(subject))
dt_max <- dt_df %>%
group_by(subject, trialCount) %>%
summarise(attempt = max(trialAttempts))
dt_mean <- dt_max %>%
group_by(trialCount) %>%
summarise(attempt = mean(attempt))
dt_mean$subject = "average"
dt_max <- rbind(dt_max, dt_mean)
ggplot(dt_max, aes(x = trialCount, y = attempt, group = subject, color = subject)) +
geom_line() +
geom_point()
# ILLEGAL TRANSITIONS TASK
it_df <- df %>%
filter(taskName == "illegalTransitionTask" & sectionName == "mainTask") %>%
select(subject, trialCount, taskName, block, sectionName, RT, acc, activeNode_community,
isBoundaryNode, transitionType, isCommunityTransition, partResp, missedSkip) %>%
filter(transitionType == "i" )
it_acc <- it_df %>%
group_by(subject) %>%
summarise(acc_perc = mean(acc, na.rm = TRUE))
it_acc
bad_subs <- it_acc %>%
filter(acc_perc < 0.70)
it_df <- it_df %>%
filter(subject %in% it_acc$subject) %>%
filter(!subject %in% bad_subs$subject)
it_df %>%
group_by(subject) %>%
summarise(mean_RT = mean(RT, na.rm=TRUE))
ggplot(it_acc, aes(x = transitionType ,y = acc_perc)) +
geom_jitter(width = 0.3) +
geom_boxplot(alpha = 0.5, fill = "blue", outlier.colour = NA) +
xlab("Transition Type") +
ylab("Accuracy")
#how accuracy compares bw the 2 blocks
it_acc_illegal <- it_df %>%
group_by(subject, block) %>%
summarise(acc_perc = mean(acc),sd_acc = sd(acc))
it_acc_illegal
ggplot(it_acc_illegal, aes(x = block ,y = acc_perc)) +
#geom_jitter(width = 0.3) +
geom_point() +
geom_line(aes(group=subject)) +
geom_boxplot(alpha = 0.5, fill = "blue", outlier.colour = NA) +
xlab("Block") +
ylab("Accuracy")
t.test(it_acc_illegal$acc_perc ~ it_acc_illegal$block, paired = TRUE, alternative = "two.sided")
subj_df <- df %>%
filter(taskName == "illegalTransitionTask" | taskName == "practiceTransitionTask") %>%
select(subject, taskName, trialCount, RT, acc, transitionType)
View(ooo_df)
#ooo RT stats
ooo_df %>%
summarise(mean_RT = mean(RT)) %>%
summarise(sd_RT = sd(RT))
#ooo RT stats
ooo_df %>%
summarise(mean_RT = mean(RT)) %>%
summarise(sd_RT = sd(RT))
#ooo RT stats
ooo_df %>%
summarise(mean_RT = mean(RT)) %>%
#ooo RT stats
ooo_df %>%
summarise(mean_RT = mean(RT))
#ooo RT stats
ooo_df %>%
summarise(mean_RT = mean(RT))
#ooo RT stats
ooo_df %>%
summarise(mean_RT = mean(RT))
summarise(sd_RT = sd(RT))
ooo_df %>%
summarise(sd_RT = sd(RT))
#ooo RT stats
ooo_df %>%
summarise(mean_RT = mean(RT))
ooo_df %>%
summarise(sd_RT = sd(RT))
#ooo plot
ggplot(ooo_acc, aes(x = "Whole Sample",y = acc_perc)) +
geom_jitter(width = 0.3) +
geom_boxplot(alpha = 0.5, fill = "blue", outlier.colour = NA) +
ylab("Accuracy") +
theme(axis.title.x=element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
geom_hline(yintercept=0.33, linetype="dashed",
color = "black", size=2)
#one sided t-test (> .33)
t.test(ooo_acc$acc_perc, mu=0.33, alternative="greater")
library(tidyverse)
library(reshape2)
library(psych)
library(knitr)
#library(lmerTest)
#path references
data_path <-  "/Users/brookesevchik/Box/Data/Optimal_Learning/Pilot2/"
fileName <-  "optimal_learning"
dfFileName <- paste("combinedData_", fileName, ".csv", sep = "")
#load data
df <- read_csv(paste(data_path,dfFileName,sep="/")) %>%
mutate(block = as.factor(k))
#df <- df %>%
#filter(subject!="aks4fb283j7wy")
#ODD ONE OUT
ooo_df <- df %>%
filter(taskName == "oddOneOutTest" & sectionName == "mainTask") %>%
select(taskName, sectionName, trialCount, blockTrialCount, block, trialAttempts, stimOnset,
respOnset, RT, acc, partResp, choice_name, choice_image, choice_communityNumber,
option1_name, option1_image, option1_communityNumber, option2_name, option2_image,
option2_communityNumber, option3_name, option3_image, option3_communityNumber, subject)
#ooo accuracy
ooo_acc <- ooo_df %>%
group_by(subject) %>%
summarise(acc_perc = mean(acc))
ooo_acc
#ooo RT stats
ooo_df %>%
summarise(mean_RT = mean(RT))
ooo_df %>%
summarise(sd_RT = sd(RT))
#ooo plot
ggplot(ooo_acc, aes(x = "Whole Sample",y = acc_perc)) +
geom_jitter(width = 0.3) +
geom_boxplot(alpha = 0.5, fill = "blue", outlier.colour = NA) +
ylab("Accuracy") +
theme(axis.title.x=element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
geom_hline(yintercept=0.33, linetype="dashed",
color = "black", size=2)
#one sided t-test (> .33)
t.test(ooo_acc$acc_perc, mu=0.33, alternative="greater")
dt_df <- df %>%
filter(taskName == "networkDragTask") %>%
select(subject, taskName, trialCount, trialAttempts, nCorrect, slot0, slot1, slot2, slot3, slot4, slot5, slot6, slot7, slot8, slot9) %>%
mutate(subject = as.factor(subject))
dt_max <- dt_df %>%
group_by(subject, trialCount) %>%
summarise(attempt = max(trialAttempts))
dt_mean <- dt_max %>%
group_by(trialCount) %>%
summarise(attempt = mean(attempt))
dt_mean$subject = "average"
dt_max <- rbind(dt_max, dt_mean)
ggplot(dt_max, aes(x = trialCount, y = attempt, group = subject, color = subject)) +
geom_line() +
geom_point()
it_df <- df %>%
filter(taskName == "illegalTransitionTask" & sectionName == "mainTask") %>%
select(subject, trialCount, taskName, block, sectionName, RT, acc, activeNode_community,
isBoundaryNode, transitionType, isCommunityTransition, partResp, missedSkip) %>%
filter(transitionType == "i" )
it_acc <- it_df %>%
group_by(subject) %>%
summarise(acc_perc = mean(acc, na.rm = TRUE))
it_acc
bad_subs <- it_acc %>%
filter(acc_perc < 0.70)
it_df <- it_df %>%
filter(subject %in% it_acc$subject) %>%
filter(!subject %in% bad_subs$subject)
it_df %>%
group_by(subject) %>%
summarise(mean_RT = mean(RT, na.rm=TRUE))
ggplot(it_acc, aes(x = transitionType ,y = acc_perc)) +
geom_jitter(width = 0.3) +
geom_boxplot(alpha = 0.5, fill = "blue", outlier.colour = NA) +
xlab("Transition Type") +
ylab("Accuracy")
View(it_acc)
View(it_acc)
View(it_df)
it_acc <- it_df %>%
group_by(subject) %>%
summarise(acc_perc = mean(acc, na.rm = TRUE))
it_acc
it_acc_illegal <- it_df %>%
group_by(subject, block) %>%
summarise(acc_perc = mean(acc),sd_acc = sd(acc))
it_acc_illegal
it_df <- it_df %>%
summarise(acc_perc = mean(acc),sd_acc = sd(acc))
it_acc <- it_df %>%
group_by(subject) %>%
summarise(acc_perc = mean(acc, na.rm = TRUE))
select(transitionType)
it_acc
it_acc <- it_df %>%
group_by(subject) %>%
summarise(acc_perc = mean(acc, na.rm = TRUE))
it_acc
ggplot(it_acc, aes(x = transitionType ,y = acc_perc)) +
geom_jitter(width = 0.3) +
geom_boxplot(alpha = 0.5, fill = "blue", outlier.colour = NA) +
xlab("Transition Type") +
ylab("Accuracy")
ggplot(it_acc, it_df, aes(x = transitionType ,y = acc_perc)) +
geom_jitter(width = 0.3) +
geom_boxplot(alpha = 0.5, fill = "blue", outlier.colour = NA) +
xlab("Transition Type") +
ylab("Accuracy")
ggplot(it_acc & it_df, aes(x = transitionType ,y = acc_perc)) +
geom_jitter(width = 0.3) +
geom_boxplot(alpha = 0.5, fill = "blue", outlier.colour = NA) +
xlab("Transition Type") +
ylab("Accuracy")
it_tt <- it_df %>%
group_by(subject) %>%
select(transitionType)
it_tt <- it_df %>%
select(transitionType)
it_df <- df %>%
filter(taskName == "illegalTransitionTask" & sectionName == "mainTask") %>%
select(subject, trialCount, taskName, block, sectionName, RT, acc, activeNode_community,
isBoundaryNode, transitionType, isCommunityTransition, partResp, missedSkip) %>%
filter(transitionType == "i" )
it_tt <- it_df %>%
select(transitionType)
View(it_tt)
it_tt <- it_df %>%
group_by(subject) %>%
select(transitionType)
it_df <- df %>%
filter(taskName == "illegalTransitionTask" & sectionName == "mainTask") %>%
select(subject, trialCount, taskName, block, sectionName, RT, acc, activeNode_community,
isBoundaryNode, transitionType, isCommunityTransition, partResp, missedSkip) %>%
filter(transitionType == "i" )
ggplot(it_acc & it_tt, aes(x = transitionType ,y = acc_perc)) +
geom_jitter(width = 0.3) +
geom_boxplot(alpha = 0.5, fill = "blue", outlier.colour = NA) +
xlab("Transition Type") +
ylab("Accuracy")
it_acc_illegal <- it_df %>%
group_by(subject, block) %>%
summarise(acc_perc = mean(acc),sd_acc = sd(acc))
it_acc_illegal
ggplot(it_acc_illegal, aes(x = block ,y = acc_perc)) +
#geom_jitter(width = 0.3) +
geom_point() +
geom_line(aes(group=subject)) +
geom_boxplot(alpha = 0.5, fill = "blue", outlier.colour = NA) +
xlab("Block") +
ylab("Accuracy")
t.test(it_acc_illegal$acc_perc ~ it_acc_illegal$block, paired = TRUE, alternative = "two.sided")
subj_df <- df %>%
filter(taskName == "illegalTransitionTask" | taskName == "practiceTransitionTask") %>%
select(subject, taskName, trialCount, RT, acc, transitionType)
library(tidyverse)
setwd("~/Documents/GitHub/anxiety_cognitive_maps_analyses")
df <- read_csv('data/combinedData_Anxiety_Cognitive_Maps.csv')
View(df)
drop_df <- df %>%
drop_df <- df %>%
filter(sectionType == 'dragTaskDropEvent')
drop_df <- df %>%
filter(sectionType == 'dragTaskDropEvent')
View(drop_df)
drop_df <- df %>%
filter(sectionType == 'dragTaskDropEvent') %>%
select(dragThreat, dragAcc)
write_csv(drop_df, 'data/dropEvent.csv')
